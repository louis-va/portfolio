---
import { ViewTransitions, fade } from 'astro:transitions';
import Container from './Container.astro';
import Header from './Header.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;	

/* View transition animation */
const fadeAnimation = {
  old: {
    name: "fade-out",
    duration: "0.15s",
    easing: "ease-out",
    fillMode: "forwards",
  },
  new: {
    name: "fade-in",
		delay: "0.3s",
    duration: "0.15s",
    easing: "ease-out",
    fillMode: "backwards",
  },
};

const pageAnimation = {
  forwards: fadeAnimation,
  backwards: fadeAnimation,
};
---

<!doctype html>
<html lang="en" transition:animate='none'>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Iâ€™m a fullstack developer that enjoys working on technical and creative applications." />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
		<script>
			import getTheme from '../utils/theme.utils';
			document.addEventListener('astro:after-swap', () => {
      	document.documentElement.setAttribute("data-theme", getTheme());
			});
			document.documentElement.setAttribute("data-theme", getTheme());
		</script>
	</head>
	<body>
		<Container>
			<Header />
			<main transition:animate={pageAnimation}>
				<slot />
			</main>
		</Container>
	</body>
</html>

<style is:global>
	/* GLOBAL */
	@font-face {
		font-family: 'Manrope';
		src: url('/fonts/Manrope-Regular.ttf') format('truetype');
		font-weight: normal;
		font-style: normal;
		font-display: swap;
	}
	@font-face {
		font-family: 'Red Hat Mono';
		src: url('/fonts/RedHatMono-Regular.ttf') format('truetype');
		font-weight: normal;
		font-style: normal;
		font-display: swap;
	}
	:root {
		--font-sans-serif: 'Manrope', sans-serif;
		--font-monospace: 'Red Hat Mono', monospace;
		--gutter: 1.5rem;
	}
	[data-theme="light"] {
		--color-bg: #FFFFFF;
		--color-text: #020226;
		--color-text-muted: #808092;
		--color-card: #F2F2F4;
		--color-border: #E1E1E5;
		--color-accent: #FF4444;
	}
	[data-theme="dark"] {
		--color-bg: #141418;
		--color-text: #FFFFFF;
		--color-text-muted: #89898B;
		--color-card: #202024;
		--color-border: #303034;
		--color-accent: #FF4444;
	}
	html {
		font-family: var(--font-sans-serif);
		background: var(--color-bg);
		color: var(--color-text);
	}

	/* RESET */
	*, *::before, *::after {
    box-sizing: border-box;
	}
	* {
			margin: 0;
	}
	html, body {
			height: 100%;
	}
	body {
			line-height: 1.5;
			-webkit-font-smoothing: antialiased;
	}
	img, picture, video, canvas, svg {
			display: block;
			max-width: 100%;
	}
	input, button, textarea, select {
			font: inherit;
	}
	p, h1, h2, h3, h4, h5, h6 {
			overflow-wrap: break-word;
	}
	button {
		background: none;
		color: inherit;
		border: none;
		padding: 0;
		font: inherit;
		cursor: pointer;
		outline: inherit;
	}

	/* VIEW TRANSITION ANIMATION */
	@keyframes fade-out {
    from {
      transform: translateY(0rem);
			opacity: 1;
    }
    to {
      transform: translateY(.5rem);
			opacity: 0;
    }
  }

	@keyframes fade-in {
    from {
      transform: translateY(-.5rem);
			opacity: 0;
    }
    to {
      transform: translateY(0rem);
			opacity: 1;
    }
  }
</style>